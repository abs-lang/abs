(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{510:function(t,a,s){"use strict";s.r(a);var n=s(45),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"upgrading-from-abs-1-to-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-from-abs-1-to-2"}},[t._v("#")]),t._v(" Upgrading from ABS 1 to 2")]),t._v(" "),s("p",[t._v("It's not always possible to release backwards compatible changes,\nand ABS is no exception to the rule: luckily, the major upgrade\nbetween version 1 and 2 should be extremely painless as there have\nbeen no syntax changes, but rather just a handful of function\nchanges.")]),t._v(" "),s("h2",{attrs:{id:"deprecated-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deprecated-functions"}},[t._v("#")]),t._v(" Deprecated functions")]),t._v(" "),s("ul",[s("li",[t._v("the "),s("code",[t._v("slice")]),t._v(" function you could use on arrays and strings has been removed. Use the index notation instead: "),s("code",[t._v("[1, 2, 3].slice(0, 1)")]),t._v(" is equivalent to "),s("code",[t._v("[1, 2, 3][0:1]")])]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("contains")]),t._v(" function you could use on arrays and strings has been removed. Use the "),s("code",[t._v("in")]),t._v(" operator instead: "),s("code",[t._v("[1, 2, 3].contains(1)")]),t._v(" is equivalent to "),s("code",[t._v("1 in [1, 2, 3]")])])]),t._v(" "),s("h2",{attrs:{id:"misc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#misc"}},[t._v("#")]),t._v(" Misc")]),t._v(" "),s("p",[t._v("The structure for decorators had to be slighly changed to allow\nsubstantial improvements (ABS 2's decorators are 100% aligned with\nPython's decorators which are extremely powerful).")]),t._v(" "),s("p",[t._v("Earlier, a decorator function would be declared as:")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("f log_if_slow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" treshold_ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" `date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("3N`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" original_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" `date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("3N`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" treshold_ms "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            echo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mmm, we were pretty slow..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@log_if_slow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf my_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v('In ABS 2, a decorator must evaluate to a function that accepts\nthe original function and returns a new one with the "enhanced"\nbehaviour. It\'s probably easier to see it in action:')]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("f log_if_slow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("treshold_ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" `date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("3N`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" original_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" `date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("3N`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" treshold_ms "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                echo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mmm, we were pretty slow..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@log_if_slow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf my_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("As you can see there are 2 main differences:")]),t._v(" "),s("ul",[s("li",[t._v("the arguments to the decorator don't start with the original function anymore")]),t._v(" "),s("li",[t._v("there's an additional wrapping function, accepting the original function, in the decorator")])]),t._v(" "),s("h2",{attrs:{id:"what-more"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-more"}},[t._v("#")]),t._v(" What more?")]),t._v(" "),s("p",[t._v("That's really it: upgrading to ABS 2 should be an extremely painless process!")])])}),[],!1,null,null,null);a.default=e.exports}}]);