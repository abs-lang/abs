(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{505:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"configuring-the-repl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-repl"}},[t._v("#")]),t._v(" Configuring the REPL")]),t._v(" "),s("p",[t._v("Interactive REPL sessions can restore and save the command\nhistory to a history file containing a maximum number of command lines.")]),t._v(" "),s("p",[t._v("The prompt live history is restored from the history file when\nthe REPL starts and then saved again when the REPL exits. This way you\ncan navigate through the command lines from your previous sessions\nby using the up and down arrow keys at the prompt.")]),t._v(" "),s("p",[t._v("Note well that the live prompt history will show duplicate command\nlines, but the saved history will only contain a single command\nwhen the previous command and the current command are the same.")]),t._v(" "),s("p",[t._v("The history file name and the maximum number of history lines are\nconfigurable through:")]),t._v(" "),s("ul",[s("li",[t._v("the ABS environment (set by the ABS init file; see below)")]),t._v(" "),s("li",[t._v("the OS environment")]),t._v(" "),s("li",[t._v("The default values are "),s("code",[t._v('ABS_HISTORY_FILE="~/.abs_history"')]),t._v(" and "),s("code",[t._v("ABS_MAX_HISTORY_LINES=1000")]),t._v(".")])]),t._v(" "),s("p",[t._v("If you wish to suppress the command line history completely, just\nset "),s("code",[t._v("ABS_MAX_HISTORY_LINES=0")]),t._v(". In this case the history file\nwill not be created.")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ABS_HISTORY_FILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/my_abs_hist"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ABS_MAX_HISTORY_LINES")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n$ abs\nHello user, welcome to the ABS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(".0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" programming language"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nType "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quit'")]),t._v(" when you are done, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'help'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you get lost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n⧐  pwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/home/user/git/abs\n⧐  cd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/home/user\n⧐  echo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhello\n⧐  quit\nAdios"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/my_abs_hist`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\npwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\necho"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$\n")])])]),s("h2",{attrs:{id:"configuring-the-abs-repl-command-line-prompt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-abs-repl-command-line-prompt"}},[t._v("#")]),t._v(" Configuring the ABS REPL Command Line Prompt")]),t._v(" "),s("p",[t._v("The ABS REPL command line prompt may be configured at start up using\n"),s("code",[t._v("ABS_PROMPT_LIVE_PREFIX")]),t._v(" and "),s("code",[t._v("ABS_PROMPT_PREFIX")]),t._v(" variables from either\nthe ABS or OS environments. The default values are\n"),s("code",[t._v("ABS_PROMPT_LIVE_PREFIX=false")]),t._v(" and "),s("code",[t._v('ABS_PROMPT_PREFIX="⧐ "')]),t._v(".")]),t._v(" "),s("p",[t._v('REPL "static prompt" mode will be configured if '),s("code",[t._v("ABS_PROMPT_PREFIX")]),t._v("\ncontains no live prompt "),s("code",[t._v("template string")]),t._v(" or if\n"),s("code",[t._v("ABS_PROMPT_LIVE_PREFIX=false")]),t._v(". The "),s("code",[t._v("static prompt")]),t._v(" will be the\nvalue of the "),s("code",[t._v("ABS_PROMPT_PREFIX")]),t._v(" string (if present) or the default\nprompt "),s("code",[t._v('"⧐ "')]),t._v(". Static prompt mode is the default for the REPL.")]),t._v(" "),s("p",[t._v('REPL "live prompt" mode follows the current working directory\nset by '),s("code",[t._v("cd()")]),t._v(" when both "),s("code",[t._v("ABS_PROMPT_LIVE_PREFIX=true")]),t._v(" and the\n"),s("code",[t._v("ABS_PROMPT_PREFIX")]),t._v(" variable contains a live prompt "),s("code",[t._v("template string")]),t._v(".")]),t._v(" "),s("p",[t._v("A live prompt "),s("code",[t._v("template string")]),t._v(" may contain the following\nnamed placeholders:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("{user}")]),t._v(": the current userId")]),t._v(" "),s("li",[s("code",[t._v("{host}")]),t._v(": the local hostname")]),t._v(" "),s("li",[s("code",[t._v("{dir}")]),t._v(": the current working directory following "),s("code",[t._v("cd()")])])]),t._v(" "),s("p",[t._v("For example, you can create a "),s("code",[t._v("bash")]),t._v("-style live prompt:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.absrc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ABS init script ~/.absrc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For interactive REPL, override default prompt, history filename and size")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ABS_INTERACTIVE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ABS_PROMPT_LIVE_PREFIX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    ABS_PROMPT_PREFIX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{user}@{host}:{dir}$ "')]),t._v("\n    ABS_HISTORY_FILE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/.abs_hist"')]),t._v("\n    ABS_MAX_HISTORY_LINES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n$ abs\nHello user, welcome to the ABS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(".0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" programming language"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nType "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quit'")]),t._v(" when you are done, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'help'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you get lost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nuser@hostname:~/git/abs$ cwd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nuser@hostname:~$ "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" .absrc"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n.absrc\nuser@hostname:~$\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);